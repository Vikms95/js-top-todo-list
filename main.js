(()=>{"use strict";const e=[];let t=function(){let e=0;return function(){return e++}}();const n=()=>{let n=(d="Title unnecessary long to prove width max",a="29-04",s="2",o="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",{_id:t(),title:d,dueDate:a,priority:s,description:o,notes:void 0,checkmark:!1});var d,a,s,o;return e.push(n),n},d=()=>{let e=document.getElementById("dynamic-content");const t=document.createElement("div"),d=document.createElement("div"),a=document.createElement("button"),s=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div"),c=document.createElement("div"),l=document.createElement("div");e.appendChild(t),t.appendChild(d),t.appendChild(s),d.appendChild(a),s.appendChild(o),s.appendChild(l),o.appendChild(i),o.appendChild(c),t.classList.add("todo-container"),d.classList.add("todo"),d.classList.add("checkmark"),s.classList.add("todo"),s.classList.add("body"),o.classList.add("todo"),o.classList.add("header"),i.classList.add("todo"),i.classList.add("title"),c.classList.add("due-date"),l.classList.add("todo"),l.classList.add("description");const r=n();return console.log(r),a.textContent="X",i.textContent=r.title,c.textContent=r.dueDate,l.textContent=r.description,i.style.backgroundColor=function(e){return{1:"aquamarine",2:"yellow",3:"red"}[e.priority]}(r),(m=a).addEventListener("click",(()=>{m.parentNode.parentNode.remove()})),e;var m};!function(){const e=document.getElementById("content"),t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("h2"),s=document.createElement("hr"),o=document.createElement("h2"),i=document.createElement("button"),c=document.createElement("button"),l=document.createElement("button"),r=document.createElement("button");var m;e.appendChild(t),e.appendChild(n),t.appendChild(a),t.appendChild(s),t.appendChild(o),t.appendChild(i),t.appendChild(c),t.appendChild(l),t.appendChild(r),t.classList.add("nav-bar"),a.classList.add("header1"),s.classList.add("header-line"),o.classList.add("header2"),n.id="dynamic-content",i.classList.add("nav-button"),c.classList.add("nav-button"),l.classList.add("nav-button"),r.classList.add("nav-button"),a.textContent="Todo",o.textContent="App",i.textContent="Home",c.textContent="New task",l.textContent="Today",r.textContent="Upcoming",m=d,c.addEventListener("click",(()=>{const e=document.getElementById("content"),t=m();e.appendChild(t)}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,